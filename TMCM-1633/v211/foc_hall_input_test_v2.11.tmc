//===============================================================================
// Copyright © 2019 TRINAMIC Motion Control GmbH & Co. KG
// (now owned by Analog Devices Inc.),
//
// Copyright © 2023 Analog Devices Inc. All Rights Reserved.
// This software is proprietary to Analog Devices, Inc. and its licensors.
//===============================================================================

//=== motor/module settings ===
SAP 253, 0, 8 	// motor poles
SAP 6, 0, 4000   	// max current
SAP 177, 0, 1500 	// start current

//=== encoder/initialization settings ===
SAP 254, 0, 0 	// hall sensor invert

//=== motion settings ===
SAP 4, 0, 4000 	// max ramp velocity
SAP 11, 0, 2000 	// acceleration
SAP 146, 0, 1 	// enable velocity ramp
SAP 7, 0, 500 	// target reached velocity
SAP 10, 0, 5 		// target reached distance

//=== current PID values ===
SAP 172, 0, 600 	// P
SAP 173, 0, 600 	// I

//=== velocity PID values ===
SAP 234, 0, 800 	// P
SAP 235, 0, 800 	// I

//=== position PID values ===
SAP 230, 0, 1000 	// P

//SGP 77, 0, 1     // start tmcl application after power up

SAP 159, 0, 6      // initialize FOC based on hall sensors

WAIT TICKS, 0, 100

SAP 155, 0, 0

// limit switch test
RepeatLimitSwitchTest:

    // do velocity mode until switch is active
    DoVelocityMode:
        // set GPIO_LED
        SIO 0, 2, 1
        
        // read adc of velocity rotary switch
        GIO 0, 1              // get adc value (analog input 0)
        CALC SUB, 1024        // -1023...1023
        CALC MUL, 4           // -4094...4096
        CALCX LOAD            // load value to X register and show the value in the status bar
        AAP 2, 0              // set value as target velocity

        WAIT TICKS, 0, 1
    
        GIO 0, 0              // is switch 1 active to switch to control mode? (digital input 0)
        COMP 1                // compare needed for JC
        JC EQ, DoVelocityMode

    // do torque mode until switch is active
    DoTorqueMode:
        // reset LED 1
        SIO 0, 2, 0
        // read adc of torque rotary switch
        GIO 1, 1              // get adc value (analog input 1)
        CALC SUB, 1024        // -1023...1023
        CALCX LOAD            // load value to X register and show the value in the status bar
        AAP 155, 0            // set value as target torque

        WAIT TICKS, 0, 1
                
        GIO 1, 0              // is switch 2 active to switch to control mode? (digital input 1)
        COMP 1                // compare needed for JC
        JC EQ, DoTorqueMode

    JA RepeatLimitSwitchTest

// end of this script
STOP
