//===============================================================================
// Copyright © 2019 TRINAMIC Motion Control GmbH & Co. KG
// (now owned by Analog Devices Inc.),
//
// Copyright © 2023 Analog Devices Inc. All Rights Reserved.
// This software is proprietary to Analog Devices, Inc. and its licensors.
//===============================================================================

//=== motor/module settings ===
SAP 253, 0, 8 	// motor poles
SAP 6, 0, 4000 	// max current
SAP 177, 0, 1500	// start current

//=== encoder/initialization settings ===
SAP 250, 0, 4096 	// encoder steps
SAP 251, 0, 1 	// encoder direction
SAP 249, 0, 1   	// init encoder mode
SAP 241, 0, 200 	// init encoder speed
SAP 254, 0, 0 	// hall sensor invert

//=== motion settings ===
SAP 4, 0, 4000 	// max ramp velocity
SAP 11, 0, 2000 	// acceleration
SAP 146, 0, 1 	// enable velocity ramp
SAP 7, 0, 500 	// target reached velocity
SAP 10, 0, 5 		// target reached distance

//=== current PID values ===
SAP 172, 0, 600 	// P
SAP 173, 0, 600 	// I

//=== velocity PID values ===
SAP 234, 0, 800 	// P
SAP 235, 0, 800 	// I

//=== position PID values ===
SAP 230, 0, 1000 	// P

//SGP 77, 0, 1     // start tmcl application after power up

WAIT TICKS, 0, 100

SAP 159, 0, 7     // set commutation mode to FOC based on encoder signals

WAIT TICKS, 0, 100

ROL 0, 200                       // start the motor
WAIT TICKS, 0, 100               // wait a short period (for motor ramp-up)

SAP 163, 0, 1    // clear once: not the encoder but the actual motor position
SAP 161, 0, 1    // by its null channel.

// the zero position is now excatly at the encoder null channel, but the motor will be
// stopped a short distance behind this zero position (depending on the speed).
// if needed, one can now go back to the exact zero position using the following command:
MVP ABS, 0, 0
WAIT TICKS, 0, 100

// limit switch test
RepeatLimitSwitchTest:

    // wait until right switch is active
    CheckSwitchAReached:
        // set LED 1
        SIO 0, 2, 1
        ROR 0, 2000 // rotate motor in right direction
        GIO 0, 0        // is switch 1 active?
        COMP 1          // compare needed for JC
        JC EQ, CheckSwitchAReached

    WAIT TICKS, 0, 100
    MVP REL, 0, 0 // hold actual position (ramp velocity down and drive back to this position
    WAIT TICKS, 0, 500

    // wait until left switch is active
    CheckSwitchBReached:
        // reset LED 1
        SIO 0, 2, 0
        ROL 0, 2000 // rotate motor in left direction
        GIO 1, 0        // is switch 2 active?
        COMP 1          // compare needed for JC
        JC EQ, CheckSwitchBReached

    WAIT TICKS, 0, 100    
    MVP REL, 0, 0 // hold actual position (ramp velocity down and drive back to this position
    WAIT TICKS, 0, 500
        
    JA RepeatLimitSwitchTest

// end of this script
STOP
